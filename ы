local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

Rayfield:Notify({
   Title = "Loading Gojo Hub",
   Content = "Thanks For Using Gojo Hub!",
   Duration = 3,
   Image = 4483362458,
})

local Window = Rayfield:CreateWindow({
   Name = "Gojo Hub | MM2",
   Icon = 0,
   LoadingTitle = "Loading Gojo Hub",
   LoadingSubtitle = "by Gojo",
   ShowText = "GojoHub",
   Theme = "Default",
   ToggleUIKeybind = "K",
   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false,
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil,
      FileName = "Gojo Hub"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink",
      RememberJoins = true
   },
   KeySystem = true,
   KeySettings = {
      Title = "Gojo Hub | Key System",
      Subtitle = "Key Link In Discord!",
      Note = "Key Link In DIscord!",
      FileName = "GojoHubKey",
      SaveKey = true,
      GrabKeyFromSite = true,
      Key = {"https://pastebin.com/raw/wq6T3vSV"}
   }
})

setclipboard("https://discord.gg/7WtejdcD")

Rayfield:Notify({
   Title = "Discord Link Copied",
   Content = "The discord link was copied to clipboard: https://discord.gg/7WtejdcD",
   Duration = 4,
})

Rayfield:Notify({
   Title = "Thanks For Using Gojo Hub!",
   Content = "V.1.0",
   Duration = 1,
   Image = "rewind",
})

local InfoTab = Window:CreateTab("‚ùìInfo")
local MainTab = Window:CreateTab("üè†Main")
local PlayerTab = Window:CreateTab("üôç‚Äç‚ôÇPlayer")
local TeleportTab = Window:CreateTab("‚õ≥Teleport")
local AutoFarmTab = Window:CreateTab("‚ôªAutoFarm")
local EspTab = Window:CreateTab("üü•Esp")
local MiscTab = Window:CreateTab("‚ûïMisc")
local RolesTab = Window:CreateTab("üßèRoles")
local SettingsTab = Window:CreateTab("‚öôSettings")

local ParagraphInfoServer = InfoTab:CreateParagraph({Title = "Info", Content = "Loading"})

-- Gun ESP
MainTab:CreateToggle({
   Name = "ESP Gun",
   CurrentValue = false,
   Flag = "GunEspToggle",
   Callback = function(Value)
      env.GunEsp = Value
      local gun = Workspace:FindFirstChild("GunDrop", true)
      if not env.GunEsp then
         if gun then
            if gun:FindFirstChild("GunHighlight") then
               gun:FindFirstChild("GunHighlight"):Destroy()
            end
            if gun:FindFirstChild("GunEsp") then
               gun:FindFirstChild("GunEsp"):Destroy()
            end
         end
      end
      
      while env.GunEsp do
         gun = Workspace:FindFirstChild("GunDrop", true)
         if gun then
            if not gun:FindFirstChild("GunHighlight") then
               local gunh = Instance.new("Highlight", gun)
               gunh.Name = "GunHighlight"
               gunh.FillColor = Color3.new(1, 1, 0)
               gunh.OutlineColor = Color3.new(1, 1, 1)
               gunh.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
               gunh.FillTransparency = 0.4
               gunh.OutlineTransparency = 0.5
            end
            if not gun:FindFirstChild("GunEsp") then
               local esp = Instance.new("BillboardGui")
               esp.Name = "GunEsp"
               esp.Adornee = gun
               esp.Size = UDim2.new(5, 0, 5, 0)
               esp.AlwaysOnTop = true
               esp.Parent = gun
               local text = Instance.new("TextLabel", esp)
               text.Name = "GunLabel"
               text.Size = UDim2.new(1, 0, 1, 0)
               text.BackgroundTransparency = 1
               text.TextStrokeTransparency = 0
               text.TextColor3 = Color3.fromRGB(255, 255, 0)
               text.Font = Enum.Font.FredokaOne
               text.TextSize = 16
               text.Text = "Gun Drop"
            end
         end
         task.wait(0.1)
      end
   end
})

-- Grab Gun Button
MainTab:CreateButton({
   Name = "Grab Gun",
   Callback = function()
      if Char and Char ~= nil and Root then
         local gun = Workspace:FindFirstChild("GunDrop",true)
         if gun then
            if firetouchinterest then
               firetouchinterest(Root, gun, 0)
               firetouchinterest(Root, gun, 1)
            else
               gun.CFrame = Root.CFrame
            end
         end
      end
   end
})

-- Auto Grab Gun
MainTab:CreateToggle({
   Name = "Auto Grab Gun",
   CurrentValue = false,
   Flag = "AutoGrabGunToggle",
   Callback = function(Value)
      env.AGG = Value
      while env.AGG do
         if Char and Char ~= nil and Root then
            gun = Workspace:FindFirstChild("GunDrop",true)
            if gun then
               if firetouchinterest then
                  firetouchinterest(Root, gun, 0)
                  firetouchinterest(Root, gun, 1)
               else
                  gun.CFrame = Root.CFrame
               end
            end
         end
         task.wait(0.1)
      end
   end
})

-- Steal Gun Button
MainTab:CreateButton({
   Name = "Steal Gun (From Sheriff&Hero)",
   Callback = function()
      if Char and Char ~= nil and Hum and backpack then
         for _, p in pairs(Players:GetPlayers()) do
            if p ~= LocalPlayer then
               if p.Character and p.Character:FindFirstChild("Gun") then
                  p.Character:FindFirstChild("Gun").Parent = Char
                  Hum:EquipTool(Char:FindFirstChild("Gun"))
                  Hum:UnequipTools()
               elseif p:FindFirstChild("Backpack") and p.Backpack:FindFirstChild("Gun") then
                  p.Backpack:FindFirstChild("Gun").Parent = backpack
                  Hum:EquipTool(backpack:FindFirstChild("Gun"))
                  Hum:UnequipTools()
               end
            end
         end
      end
   end
})

-- Shoot Murder Button
local function getMurdererTarget()
   local data = ReplicatedStorage:FindFirstChild("GetPlayerData", true):InvokeServer()
   for plr, plrData in pairs(data) do
      if plrData.Role == "Murderer" then
         local player = Players:FindFirstChild(plr)
         if player then
            if player == LocalPlayer then return nil, true end
            local char = player.Character
            if char then
               local hrp = char:FindFirstChild("HumanoidRootPart")
               if hrp then return hrp.Position, false end
               local head = char:FindFirstChild("Head")
               if head then return head.Position, false end
            end
         end
      end
   end
   return nil, false
end

MainTab:CreateToggle({
   Name = "Shoot Murder Button",
   CurrentValue = false,
   Flag = "ShootMurderToggle",
   Callback = function(Value)
      local guip, CoreGui = nil, game:FindService("CoreGui")
      if gethui then
         guip = gethui()
      elseif CoreGui and CoreGui:FindFirstChild("RobloxGui") then
         guip = CoreGui.RobloxGui
      elseif CoreGui then
         guip = CoreGui
      else
         guip = LocalPlayer:FindFirstChild("PlayerGui")
      end
      
      if Value then
         if not guip:FindFirstChild("GunW") then
            local GunGui = Instance.new("ScreenGui", guip)
            GunGui.Name = "GunW"
            local TextButton = Instance.new("TextButton", GunGui)
            TextButton.Draggable = true
            TextButton.Position = UDim2.new(0.5, 187, 0.5, -176)
            TextButton.Size = UDim2.new(0, 50, 0, 40)
            TextButton.TextStrokeTransparency = 0
            TextButton.BackgroundTransparency = 0.2
            TextButton.BackgroundColor3 = Color3.fromRGB(44, 44, 45)
            TextButton.BorderColor3 = Color3.new(1, 1, 1)
            TextButton.Text = "Shoot Murder"
            TextButton.TextColor3 = Color3.new(1, 1, 1)
            TextButton.TextSize = 8
            TextButton.Visible = true
            TextButton.AnchorPoint = Vector2.new(0.4, 0.2)
            TextButton.Active = true
            TextButton.TextWrapped = true
            local corner = Instance.new("UICorner", TextButton)
            local UIStroke = Instance.new("UIStroke", TextButton)
            UIStroke.Color = Color3.new(0, 0, 0)
            UIStroke.Thickness = 4
            UIStroke.Transparency = 0.4
            local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint", TextButton)
            UIAspectRatioConstraint.AspectRatio = 1.5
            local UIGradient = Instance.new("UIGradient", TextButton)
            UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.new(0.3, 0.3, 0.3)),ColorSequenceKeypoint.new(1, Color3.new(1, 1, 1))}
            
            local function rotateGradient()
               local tween = Tween:Create(UIGradient, TweenInfo.new(2, Enum.EasingStyle.Linear), {Rotation = UIGradient.Rotation + 360})
               tween:Play()
               tween.Completed:Connect(rotateGradient)
            end
            rotateGradient()
            
            TextButton.MouseButton1Click:Connect(function()
               if Char:FindFirstChild("Gun") then
                  pcall(function()
                     Char.Gun.KnifeLocal.CreateBeam.RemoteFunction:InvokeServer(1, (getMurdererTarget()), "AH2")
                  end)
               end
            end)
         end
      else
         if guip:FindFirstChild("GunW") then
            guip:FindFirstChild("GunW"):Destroy()
         end
      end
   end
})

-- Gun Aimbot
local function check()
   local success, hookFunc = false, nil
   if not getnamecallmethod or not checkcaller then return success end
   local mt = getrawmetatable and getrawmetatable(game) or debug.getmetatable and debug.getmetatable(game)
   
   local function handleNamecall(self, ...)
      local method = getnamecallmethod and getnamecallmethod()
      local args = {...}
      if not checkcaller() then
         if method == "InvokeServer" and tostring(self) == "RemoteFunction" and env.enabledGunBot then
            return nil
         end
      end
      return hookFunc(self, unpack(args))
   end
   
   if hookmetamethod and newcclosure then
      hookFunc = hookmetamethod(game, "__namecall", newcclosure(handleNamecall))
      success = true
   elseif mt and setreadonly and newcclosure then
      setreadonly(mt, false)
      hookFunc = mt.__namecall
      mt.__namecall = newcclosure(handleNamecall)
      setreadonly(mt, true)
      success = true
   elseif hookmetamethod then
      hookFunc = hookmetamethod(game, "__namecall", handleNamecall)
      success = true
   elseif mt and setreadonly then
      setreadonly(mt, false)
      hookFunc = mt.__namecall
      mt.__namecall = handleNamecall
      setreadonly(mt, true)
      success = true
   elseif mt and (makewriteable or make_writeable) then
      (makewriteable or make_writeable)(mt)
      hookFunc = mt.__namecall
      mt.__namecall = handleNamecall
      success = true
   end
   return success
end

local isUseHook = check()

MainTab:CreateToggle({
   Name = "Gun Aimbot",
   CurrentValue = false,
   Flag = "GunAimbotToggle",
   Callback = function(Value)
      if isUseHook then
         env.enabledGunBot = Value
         env.GunBotConnection = env.GunBotConnection or {}
         
         local function setupGunBot(character)
            if not character then return end
            local gun = character:FindFirstChild("Gun")
            if not gun then
               if env.GunBotConnection.Connection then
                  env.GunBotConnection.Connection:Disconnect()
                  env.GunBotConnection.Connection = nil
               end
               return
            end
            
            local knifeScript = gun:FindFirstChild("KnifeLocal")
            local cb = knifeScript and knifeScript:FindFirstChild("CreateBeam")
            local remote = cb and cb:FindFirstChild("RemoteFunction")
            if not knifeScript or not cb or not remote then return end
            
            if env.enabledGunBot then
               if env.GunBotConnection.Connection then
                  env.GunBotConnection.Connection:Disconnect()
                  env.GunBotConnection.Connection = nil
               end
               env.GunBotConnection.Connection = gun.Activated:Connect(function()
                  local targetPos, isSelf = getMurdererTarget()
                  if not targetPos or isSelf or not remote then return end
                  remote:InvokeServer(1, targetPos, "AH2")
               end)
            else
               if env.GunBotConnection.Connection then
                  env.GunBotConnection.Connection:Disconnect()
                  env.GunBotConnection.Connection = nil
               end
            end
         end
         
         while env.enabledGunBot do
            if Char and Char:FindFirstChild("Gun") then
               setupGunBot(Char)
            end
            task.wait(0.25)
         end
         
         if not env.enabledGunBot then
            if env.GunBotConnection.Connection then
               env.GunBotConnection.Connection:Disconnect()
               env.GunBotConnection.Connection = nil
            end
         end
      else
         Rayfield:Notify({
            Title = "Executor Not Supported",
            Content = "Your executor doesn't support this function",
            Duration = 3,
            Image = 7733658504
         })
      end
   end
})
