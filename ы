local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- Initial notifications
Rayfield:Notify({
   Title = "Loading Gojo Hub",
   Content = "Thanks For Using Gojo Hub!",
   Duration = 3,
   Image = 4483362458,
})

local Window = Rayfield:CreateWindow({
   Name = "Gojo Hub | MM2",
   Icon = 0,
   LoadingTitle = "Loading Gojo Hub",
   LoadingSubtitle = "by Gojo",
   ShowText = "GojoHub",
   Theme = "Default",
   ToggleUIKeybind = "K",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil,
      FileName = "Gojo Hub"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink",
      RememberJoins = true
   },
   KeySystem = true,
   KeySettings = {
      Title = "Gojo Hub | Key System",
      Subtitle = "Key Link In Discord!",
      Note = "Key Link In DIscord!",
      FileName = "GojoHubKey",
      SaveKey = true,
      GrabKeyFromSite = true,
      Key = {"https://pastebin.com/raw/wq6T3vSV"}
   }
})

setclipboard("https://discord.gg/7WtejdcD")

Rayfield:Notify({
   Title = "Discord Link Copied",
   Content = "The discord link was copied to clipboard: https://discord.gg/7WtejdcD",
   Duration = 4,
})

Rayfield:Notify({
   Title = "Thanks For Using Gojo Hub!",
   Content = "V.1.0",
   Duration = 1,
   Image = "rewind",
})

-- Wait for game to load
if not game:IsLoaded() then
    local s = pcall(function() game.Loaded:Wait() end)
    if not s then repeat task.wait() until game:IsLoaded() end
end

-- Only work in MM2
if game.PlaceId ~= 142823291 then return end

-- Services
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local UserInputService = game:GetService("UserInputService")

-- Player variables
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Humanoid = Character:FindFirstChildOfClass("Humanoid")
local RootPart = Humanoid and Humanoid.RootPart or Character:FindFirstChild("HumanoidRootPart") or Character:FindFirstChild("Torso") or Character:FindFirstChild("UpperTorso")

-- Character setup
LocalPlayer.CharacterAdded:Connect(function(newChar)
    Character = newChar
    Humanoid = Character:WaitForChildOfClass("Humanoid")
    RootPart = Humanoid.RootPart or Character:WaitForChild("HumanoidRootPart")
end)

-- Create tabs
local MainTab = Window:CreateTab("üè†Main")
local PlayerTab = Window:CreateTab("üôç‚Äç‚ôÇPlayer")
local TeleportTab = Window:CreateTab("‚õ≥Teleport")
local EspTab = Window:CreateTab("üü•Esp")
local MiscTab = Window:CreateTab("‚ûïMisc")

-- Utility Functions
local function getRoles()
    local data = ReplicatedStorage:FindFirstChild("GetPlayerData", true):InvokeServer()
    local roles = {}
    for plr, plrData in pairs(data) do
        if not plrData.Dead then
            roles[plr] = plrData.Role
        end
    end
    return roles
end

local function getMurdererTarget()
    local data = ReplicatedStorage:FindFirstChild("GetPlayerData", true):InvokeServer()
    for plr, plrData in pairs(data) do
        if plrData.Role == "Murderer" then
            local player = Players:FindFirstChild(plr)
            if player then
                if player == LocalPlayer then return nil, true end
                local char = player.Character
                if char then
                    local hrp = char:FindFirstChild("HumanoidRootPart")
                    if hrp then return hrp.Position, false end
                    local head = char:FindFirstChild("Head")
                    if head then return head.Position, false end
                end
            end
        end
    end
    return nil, false
end

-- ESP Section
local ESPToggle = EspTab:CreateToggle({
   Name = "ESP Player (Role&Name)",
   CurrentValue = false,
   Flag = "ESPEnabled",
   Callback = function(Value)
        getgenv().ESP_ENABLED = Value
        
        local roleColors = {
            Murderer = Color3.fromRGB(255, 0, 0),
            Sheriff = Color3.fromRGB(0, 0, 255),
            Hero = Color3.fromRGB(255, 255, 0),
            Innocent = Color3.fromRGB(0, 255, 0),
            Default = Color3.fromRGB(200, 200, 200)
        }
        
        local function clearESP()
            for _, player in ipairs(Players:GetPlayers()) do
                if player ~= LocalPlayer and player.Character then
                    local head = player.Character:FindFirstChild("Head")
                    if head then
                        local esp = head:FindFirstChild("RoleESP")
                        if esp then esp:Destroy() end
                    end
                    local hl = player.Character:FindFirstChild("RoleHighlight")
                    if hl then hl:Destroy() end
                end
            end
        end
        
        local function applyHighlight(character, role)
            local existing = character:FindFirstChild("RoleHighlight")
            if existing then existing:Destroy() end
            local hl = Instance.new("Highlight")
            hl.Name = "RoleHighlight"
            hl.FillColor = roleColors[role] or roleColors.Default
            hl.OutlineColor = Color3.new(1, 1, 1)
            hl.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
            hl.FillTransparency = 0.4
            hl.OutlineTransparency = 0
            hl.Parent = character
        end
        
        local function createBillboard(head, role, playerName)
            local esp = Instance.new("BillboardGui")
            esp.Name = "RoleESP"
            esp.Adornee = head
            esp.Size = UDim2.new(5, 0, 5, 0)
            esp.AlwaysOnTop = true
            esp.Parent = head
            
            local label = Instance.new("TextLabel")
            label.Name = "RoleLabel"
            label.Parent = esp
            label.Size = UDim2.new(1, 0, 1, 0)
            label.BackgroundTransparency = 1
            label.TextStrokeTransparency = 0
            label.TextSize = 14
            label.TextColor3 = roleColors[role] or roleColors.Default
            label.Font = Enum.Font.FredokaOne
            label.Text = ("Role: %s ‚Ä¢ Name: %s"):format(role, playerName)
        end
        
        local function updateESP()
            local roles = getRoles()
            for _, player in ipairs(Players:GetPlayers()) do
                if player ~= LocalPlayer and player.Character then
                    local head = player.Character:FindFirstChild("Head")
                    if head then
                        local role = roles[player.Name] or "Default"
                        if not head:FindFirstChild("RoleESP") then
                            createBillboard(head, role, player.Name)
                        else
                            local label = head.RoleESP:FindFirstChild("RoleLabel")
                            if label then
                                label.Text = ("Role: %s ‚Ä¢ Name: %s"):format(role, player.Name)
                                label.TextColor3 = roleColors[role] or roleColors.Default
                            end
                        end
                        
                        local light = player.Character:FindFirstChild("RoleHighlight")
                        if not light then
                            applyHighlight(player.Character, role)
                        else
                            light.FillColor = roleColors[role] or roleColors.Default
                        end
                    end
                end
            end
        end
        
        if Value then
            Rayfield:Notify({
                Title = "ESP Enabled",
                Content = "Player ESP is now active",
                Duration = 2,
                Image = 4483362458
            })
            
            local espLoop
            espLoop = game:GetService("RunService").Heartbeat:Connect(function()
                if not getgenv().ESP_ENABLED then
                    espLoop:Disconnect()
                    clearESP()
                    return
                end
                pcall(updateESP)
            end)
        else
            clearESP()
        end
    end
})

-- Gun ESP
EspTab:CreateToggle({
   Name = "ESP Gun",
   CurrentValue = false,
   Flag = "GunESP",
   Callback = function(Value)
        getgenv().GunEsp = Value
        
        local function clearGunESP()
            local gun = Workspace:FindFirstChild("GunDrop", true)
            if gun then
                if gun:FindFirstChild("GunHighlight") then
                    gun:FindFirstChild("GunHighlight"):Destroy()
                end
                if gun:FindFirstChild("GunEsp") then
                    gun:FindFirstChild("GunEsp"):Destroy()
                end
            end
        end
        
        if not Value then
            clearGunESP()
            return
        end
        
        local gunEspLoop
        gunEspLoop = game:GetService("RunService").Heartbeat:Connect(function()
            if not getgenv().GunEsp then
                gunEspLoop:Disconnect()
                clearGunESP()
                return
            end
            
            local gun = Workspace:FindFirstChild("GunDrop", true)
            if gun then
                if not gun:FindFirstChild("GunHighlight") then
                    local gunh = Instance.new("Highlight", gun)
                    gunh.Name = "GunHighlight"
                    gunh.FillColor = Color3.new(1, 1, 0)
                    gunh.OutlineColor = Color3.new(1, 1, 1)
                    gunh.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                    gunh.FillTransparency = 0.4
                    gunh.OutlineTransparency = 0.5
                end
                
                if not gun:FindFirstChild("GunEsp") then
                    local esp = Instance.new("BillboardGui")
                    esp.Name = "GunEsp"
                    esp.Adornee = gun
                    esp.Size = UDim2.new(5, 0, 5, 0)
                    esp.AlwaysOnTop = true
                    esp.Parent = gun
                    
                    local text = Instance.new("TextLabel", esp)
                    text.Name = "GunLabel"
                    text.Size = UDim2.new(1, 0, 1, 0)
                    text.BackgroundTransparency = 1
                    text.TextStrokeTransparency = 0
                    text.TextColor3 = Color3.fromRGB(255, 255, 0)
                    text.Font = Enum.Font.FredokaOne
                    text.TextSize = 16
                    text.Text = "Gun Drop"
                end
            end
        end)
    end
})

-- Gun Functions
MainTab:CreateButton({
   Name = "Grab Gun",
   Callback = function()
        if Character and RootPart then
            local gun = Workspace:FindFirstChild("GunDrop", true)
            if gun then
                if firetouchinterest then
                    firetouchinterest(RootPart, gun, 0)
                    firetouchinterest(RootPart, gun, 1)
                else
                    gun.CFrame = RootPart.CFrame
                end
                Rayfield:Notify({
                    Title = "Gun Grabbed",
                    Content = "Successfully grabbed the gun",
                    Duration = 2,
                    Image = 4483362458
                })
            else
                Rayfield:Notify({
                    Title = "Error",
                    Content = "No gun found in workspace",
                    Duration = 2,
                    Image = 7733658504
                })
            end
        end
    end
})

MainTab:CreateToggle({
   Name = "Auto Grab Gun",
   CurrentValue = false,
   Flag = "AutoGrabGun",
   Callback = function(Value)
        getgenv().AGG = Value
        
        if Value then
            Rayfield:Notify({
                Title = "Auto Grab Enabled",
                Content = "Will automatically grab guns when available",
                Duration = 2,
                Image = 4483362458
            })
        end
        
        local aggLoop
        aggLoop = game:GetService("RunService").Heartbeat:Connect(function()
            if not getgenv().AGG then
                aggLoop:Disconnect()
                return
            end
            
            if Character and RootPart then
                local gun = Workspace:FindFirstChild("GunDrop", true)
                if gun then
                    if firetouchinterest then
                        firetouchinterest(RootPart, gun, 0)
                        firetouchinterest(RootPart, gun, 1)
                    else
                        gun.CFrame = RootPart.CFrame
                    end
                end
            end
        end)
    end
})

MainTab:CreateButton({
   Name = "Steal Gun (From Sheriff/Hero)",
   Callback = function()
        if Character and Humanoid then
            local stolen = false
            for _, p in pairs(Players:GetPlayers()) do
                if p ~= LocalPlayer then
                    if p.Character and p.Character:FindFirstChild("Gun") then
                        p.Character:FindFirstChild("Gun").Parent = Character
                        Humanoid:EquipTool(Character:FindFirstChild("Gun"))
                        Humanoid:UnequipTools()
                        stolen = true
                    elseif p:FindFirstChild("Backpack") and p.Backpack:FindFirstChild("Gun") then
                        p.Backpack:FindFirstChild("Gun").Parent = LocalPlayer.Backpack
                        Humanoid:EquipTool(LocalPlayer.Backpack:FindFirstChild("Gun"))
                        Humanoid:UnequipTools()
                        stolen = true
                    end
                end
            end
            
            if stolen then
                Rayfield:Notify({
                    Title = "Success",
                    Content = "Stole gun from Sheriff/Hero",
                    Duration = 2,
                    Image = 4483362458
                })
            else
                Rayfield:Notify({
                    Title = "Error",
                    Content = "No guns found to steal",
                    Duration = 2,
                    Image = 7733658504
                })
            end
        end
    end
})

-- Fling Functions
local function SHubFling(TargetPlayer)
    if not (Character and Humanoid and RootPart) then return end
    local TCharacter = TargetPlayer.Character
    if not TCharacter then return end
    local THumanoid = TCharacter:FindFirstChildOfClass("Humanoid")
    local TRootPart = THumanoid and THumanoid.RootPart
    local THead = TCharacter:FindFirstChild("Head")
    local Accessory = TCharacter:FindFirstChildOfClass("Accessory")
    local Handle = Accessory and Accessory:FindFirstChild("Handle")
    
    getgenv().OldPos = RootPart.CFrame
    Workspace.CurrentCamera.CameraSubject = THead or Handle or THumanoid
    
    local function FPos(BasePart, Pos, Ang)
        local targetCF = CFrame.new(BasePart.Position) * Pos * Ang
        RootPart.CFrame = targetCF
        Character:SetPrimaryPartCFrame(targetCF)
        RootPart.Velocity = Vector3.new(9e7, 9e8, 9e7)
        RootPart.RotVelocity = Vector3.new(9e8, 9e8, 9e8)
    end
    
    local function SFBasePart(BasePart)
        local start = tick()
        local angle = 0
        getgenv().timeout = getgenv().timeout or 2.5
        
        repeat
            if RootPart and THumanoid then
                angle += 100
                for _, offset in ipairs{
                    CFrame.new(0, 1.5, 0),
                    CFrame.new(0, -1.5, 0),
                    CFrame.new(2.25, 1.5, -2.25),
                    CFrame.new(-2.25, -1.5, 2.25)
                } do
                    FPos(BasePart, offset + THumanoid.MoveDirection, CFrame.Angles(math.rad(angle), 0, 0))
                    task.wait()
                end
            end
        until BasePart.Velocity.Magnitude > 500 or tick() - start > getgenv().timeout
    end
    
    local BV = Instance.new("BodyVelocity")
    BV.Name = "FlingVelocity"
    BV.Velocity = Vector3.new(9e8, 9e8, 9e8)
    BV.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
    BV.Parent = RootPart
    
    Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
    local target = TRootPart or THead or Handle
    if target then SFBasePart(target) end
    
    BV:Destroy()
    Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
    Workspace.CurrentCamera.CameraSubject = Humanoid
    
    repeat
        local cf = getgenv().OldPos * CFrame.new(0, .5, 0)
        RootPart.CFrame = cf
        Character:SetPrimaryPartCFrame(cf)
        Humanoid:ChangeState("GettingUp")
        
        for _, part in ipairs(Character:GetChildren()) do
            if part:IsA("BasePart") then
                part.Velocity, part.RotVelocity = Vector3.zero, Vector3.zero
            end
        end
        task.wait()
    until (RootPart.Position - getgenv().OldPos.p).Magnitude < 25
end

MainTab:CreateButton({
   Name = "Fling Murderer",
   Callback = function()
        local Murderer = nil
        for plr, role in getRoles() do
            if role == "Murderer" then
                Murderer = Players:FindFirstChild(plr)
                break
            end
        end
        
        if Murderer and Murderer ~= LocalPlayer then
            SHubFling(Murderer)
            Rayfield:Notify({
                Title = "Flinging Murderer",
                Content = Murderer.Name,
                Duration = 2,
                Image = 4483362458
            })
        else
            Rayfield:Notify({
                Title = "Error",
                Content = "No murderer found",
                Duration = 2,
                Image = 7733658504
            })
        end
    end
})

MainTab:CreateButton({
   Name = "Fling Sheriff/Hero",
   Callback = function()
        local Target = nil
        for plr, role in getRoles() do
            if role == "Sheriff" or role == "Hero" then
                Target = Players:FindFirstChild(plr)
                break
            end
        end
        
        if Target and Target ~= LocalPlayer then
            SHubFling(Target)
            Rayfield:Notify({
                Title = "Flinging Sheriff/Hero",
                Content = Target.Name,
                Duration = 2,
                Image = 4483362458
            })
        else
            Rayfield:Notify({
                Title = "Error",
                Content = "No sheriff/hero found",
                Duration = 2,
                Image = 7733658504
            })
        end
    end
})

-- Player Selection
local playerList = {}
local selectedPlayer = nil

local function updatePlayerList()
    playerList = {}
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            table.insert(playerList, player.Name)
        end
    end
end

updatePlayerList()

local PlayerDropdown = MainTab:CreateDropdown({
   Name = "Select Player",
   Options = playerList,
   CurrentOption = "",
   Flag = "PlayerSelect",
   Callback = function(Option)
        selectedPlayer = Option
    end
})

Players.PlayerAdded:Connect(function()
    updatePlayerList()
    PlayerDropdown:Refresh(playerList)
end)

Players.PlayerRemoving:Connect(function()
    updatePlayerList()
    PlayerDropdown:Refresh(playerList)
end)

MainTab:CreateButton({
   Name = "Fling Selected Player",
   Callback = function()
        if selectedPlayer then
            local player = Players:FindFirstChild(selectedPlayer)
            if player and player ~= LocalPlayer then
                SHubFling(player)
                Rayfield:Notify({
                    Title = "Flinging Player",
                    Content = player.Name,
                    Duration = 2,
                    Image = 4483362458
                })
            else
                Rayfield:Notify({
                    Title = "Error",
                    Content = "Player not found",
                    Duration = 2,
                    Image = 7733658504
                })
            end
        else
            Rayfield:Notify({
                Title = "Error",
                Content = "No player selected",
                Duration = 2,
                Image = 7733658504
            })
        end
    end
})

-- Teleport Functions
TeleportTab:CreateButton({
   Name = "Teleport To Map",
   Callback = function()
        local map = Workspace:FindFirstChild("CoinContainer", true)
        if map and map.Parent then
            local part = map:FindFirstChildWhichIsA("BasePart", true) or map.Parent:FindFirstChildWhichIsA("BasePart", true)
            if part and part.CFrame then
                if Character then
                    Character:PivotTo(part.CFrame * CFrame.new(0, 2, 0))
                elseif RootPart then
                    RootPart.CFrame = part.CFrame * CFrame.new(0, 2, 0)
                end
                Rayfield:Notify({
                    Title = "Teleported",
                    Content = "Teleported to map",
                    Duration = 2,
                    Image = 4483362458
                })
            end
        else
            Rayfield:Notify({
                Title = "Error",
                Content = "Map not found",
                Duration = 2,
                Image = 7733658504
            })
        end
    end
})

TeleportTab:CreateButton({
   Name = "Teleport To Lobby",
   Callback = function()
        local lobby = Workspace:FindFirstChild("Lobby", true)
        if lobby and lobby.Parent then
            local part = lobby:FindFirstChildWhichIsA("BasePart", true) or lobby.Parent:FindFirstChildWhichIsA("BasePart", true)
            if part and part.CFrame then
                if Character then
                    Character:PivotTo(part.CFrame * CFrame.new(0, 2, 0))
                elseif RootPart then
                    RootPart.CFrame = part.CFrame * CFrame.new(0, 2, 0)
                end
                Rayfield:Notify({
                    Title = "Teleported",
                    Content = "Teleported to lobby",
                    Duration = 2,
                    Image = 4483362458
                })
            end
        else
            Rayfield:Notify({
                Title = "Error",
                Content = "Lobby not found",
                Duration = 2,
                Image = 7733658504
            })
        end
    end
})

-- Player Tab Functions
PlayerTab:CreateToggle({
   Name = "Infinity Jump",
   CurrentValue = false,
   Flag = "InfJump",
   Callback = function(Value)
        getgenv().InfiniteJump = Value
        
        if Value then
            UserInputService.JumpRequest:Connect(function()
                if getgenv().InfiniteJump and Character and Humanoid then
                    Humanoid:ChangeState("Jumping")
                end
            end)
            Rayfield:Notify({
                Title = "Infinite Jump",
                Content = "Enabled infinite jump",
                Duration = 2,
                Image = 4483362458
            })
        end
    end
})

PlayerTab:CreateToggle({
   Name = "Noclip",
   CurrentValue = false,
   Flag = "Noclip",
   Callback = function(Value)
        getgenv().Noclip = Value
        
        if not Value then
            if Character then
                for _, part in pairs(Character:GetDescendants()) do
                    if part:IsA("BasePart") then
                        part.CanCollide = true
                    end
                end
            end
            return
        end
        
        Rayfield:Notify({
            Title = "Noclip",
            Content = "Enabled noclip",
            Duration = 2,
            Image = 4483362458
        })
        
        local noclipLoop
        noclipLoop = game:GetService("RunService").Stepped:Connect(function()
            if not getgenv().Noclip or not Character then
                noclipLoop:Disconnect()
                return
            end
            
            for _, part in pairs(Character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = false
                end
            end
        end)
    end
})

-- WalkSpeed
local WalkSpeedSlider = PlayerTab:CreateSlider({
   Name = "WalkSpeed",
   Range = {16, 350},
   Increment = 1,
   Suffix = "studs",
   CurrentValue = 16,
   Flag = "WalkSpeed",
   Callback = function(Value)
        if Humanoid then
            Humanoid.WalkSpeed = Value
            getgenv().Walkspeed = Value
        end
    end
})

PlayerTab:CreateInput({
   Name = "WalkSpeed Input",
   PlaceholderText = "Enter WalkSpeed",
   RemoveTextAfterFocusLost = false,
   Callback = function(Text)
        local num = tonumber(Text)
        if num then
            if Humanoid then
                Humanoid.WalkSpeed = num
                getgenv().Walkspeed = num
                WalkSpeedSlider:Set(num)
            end
        end
    end
})

PlayerTab:CreateToggle({
   Name = "Auto Set WalkSpeed",
   CurrentValue = false,
   Flag = "AutoWalkSpeed",
   Callback = function(Value)
        getgenv().KeepWalkspeed = Value
        
        if Value then
            local walkLoop
            walkLoop = game:GetService("RunService").Heartbeat:Connect(function()
                if not getgenv().KeepWalkspeed or not Humanoid then
                    walkLoop:Disconnect()
                    return
                end
                
                if Humanoid.WalkSpeed ~= getgenv().Walkspeed then
                    Humanoid.WalkSpeed = getgenv().Walkspeed
                end
            end)
        end
    end
})

-- JumpPower
local JumpPowerSlider = PlayerTab:CreateSlider({
   Name = "JumpPower",
   Range = {50, 500},
   Increment = 1,
   Suffix = "power",
   CurrentValue = 50,
   Flag = "JumpPower",
   Callback = function(Value)
        if Humanoid then
            Humanoid.JumpPower = Value
            getgenv().Jumppower = Value
        end
    end
})

PlayerTab:CreateInput({
   Name = "JumpPower Input",
   PlaceholderText = "Enter JumpPower",
   RemoveTextAfterFocusLost = false,
   Callback = function(Text)
        local num = tonumber(Text)
        if num then
            if Humanoid then
                Humanoid.JumpPower = num
                getgenv().Jumppower = num
                JumpPowerSlider:Set(num)
            end
        end
    end
})

PlayerTab:CreateToggle({
   Name = "Auto Set JumpPower",
   CurrentValue = false,
   Flag = "AutoJumpPower",
   Callback = function(Value)
        getgenv().KeepJumppower = Value
        
        if Value then
            local jumpLoop
            jumpLoop = game:GetService("RunService").Heartbeat:Connect(function()
                if not getgenv().KeepJumppower or not Humanoid then
                    jumpLoop:Disconnect()
                    return
                end
                
                if Humanoid.JumpPower ~= getgenv().Jumppower then
                    Humanoid.JumpPower = getgenv().Jumppower
                end
            end)
        end
    end
})

-- Godmode
PlayerTab:CreateToggle({
   Name = "Godmode",
   CurrentValue = false,
   Flag = "Godmode",
   Callback = function(Value)
        getgenv().enableGodmode = Value
        
        local godcon
        local function UpdateGod()
            if godcon then
                godcon:Disconnect()
                godcon = nil
            end
            
            if Humanoid and getgenv().enableGodmode then
                godcon = Humanoid.HealthChanged:Connect(function()
                    if Humanoid.Health < Humanoid.MaxHealth then
                        Humanoid.Health = Humanoid.MaxHealth
                    end
                end)
            end
        end
        
        if Value then
            Rayfield:Notify({
                Title = "Godmode",
                Content = "Enabled godmode",
                Duration = 2,
                Image = 4483362458
            })
            UpdateGod()
            
            LocalPlayer.CharacterAdded:Connect(function(newChar)
                Character = newChar
                Humanoid = Character:WaitForChildOfClass("Humanoid")
                UpdateGod()
            end)
        else
            if godcon then
                godcon:Disconnect()
                godcon = nil
            end
        end
    end
})

-- Fling Timeout
MainTab:CreateSlider({
   Name = "Fling Timeout",
   Range = {0.5, 10},
   Increment = 0.1,
   Suffix = "seconds",
   CurrentValue = 2.5,
   Flag = "FlingTimeout",
   Callback = function(Value)
        getgenv().timeout = Value
    end
})

-- Initialize
Rayfield:Notify({
    Title = "Gojo Hub Loaded",
    Content = "Enjoy the script!",
    Duration = 5,
    Image = 4483362458
})
